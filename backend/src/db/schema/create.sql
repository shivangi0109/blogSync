DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS blog_posts CASCADE;
DROP TABLE IF EXISTS comments CASCADE;
DROP TABLE IF EXISTS social_media_shares CASCADE;

CREATE TABLE users
(
id SERIAL PRIMARY KEY NOT NULL,
name VARCHAR(255) NOT NULL,
email VARCHAR(255) NOT NULL,
password VARCHAR(255) NOT NULL
);

CREATE TABLE categories
(
id SERIAL PRIMARY KEY NOT NULL,
name VARCHAR(255) NOT NULL
);

CREATE TABLE blog_posts
(
id SERIAL PRIMARY KEY NOT NULL,
user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
category_id INTEGER REFERENCES categories(id) ON DELETE CASCADE,
title VARCHAR(255) NOT NULL,
blog_img_url TEXT,
content VARCHAR(255) NOT NULL,
tags VARCHAR(255)[]
);

CREATE TABLE comments
(
id SERIAL PRIMARY KEY NOT NULL,
user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
post_id INTEGER REFERENCES blog_posts(id) ON DELETE CASCADE,
comment VARCHAR(500),
created_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

CREATE TABLE social_media_shares
(
id SERIAL PRIMARY KEY NOT NULL,
user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
post_id INTEGER REFERENCES blog_posts(id) ON DELETE CASCADE,
platform VARCHAR(255) NOT NULL,
share_timestamp TIMESTAMPTZ NOT NULL DEFAULT NOW()
);
